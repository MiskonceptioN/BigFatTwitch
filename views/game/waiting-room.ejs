<%- include('../header'); %>
	<video
		autoplay
		muted
		loop
		id="ingame-background"
		class="team-<%- user.teamIndex %>"
		>
		<source src="https://assets.danny-valentine.com/video/upload/h_1080,e_accelerate:-50/q_auto,f_auto/BigFatTwitch/anibak.mov">
	</video>
	<section id="game" class="text-center">
        <header>
            <h1 class="text-light">Waiting for game to begin</h1>
        </header>
		<% if (failureMessage) { %>
			<div class="container">
				<section>
					<div class="alert alert-danger" role="alert"><%= failureMessage %></div>
				</section>
			</div>
		<% } if (successMessage) { %>
			<div class="container">
				<section>
					<div class="alert alert-success" role="alert"><%= successMessage %></div>
				</section>
			</div>
		<% } %>
		<section>
			<h2 class="d-none"><span class="live-players">1</span> of 6 players ready</h2>
		</section>
		<hr>
		<div class="container">
			<div class="row">
				<section id="player-cards">
					<div class="row">
						<div class="col bg-white border border-dark ingame-border m-3 pt-3 pb-2">
							<div class="row">
								<div class="col d-flex align-items-center">
									<img id="<%- user.displayName %>-thumbnail" class="player-icon <% if (user.inGame === game.code) { %>player-logged-in<% } else { %>player-logged-out<% } %>" src="<%- user.profileImageUrl %>" width="100" alt="<%- user.displayName %>'s thumbnail">
									<h3 class="ms-3 mb-0"><%- user.displayName %></h3>
								</div>
							</div>
							<div class="row text-start mt-3">
								<p><%- user.bio %></p>
							</div>
						</div>
						<div class="col bg-white border border-dark ingame-border m-3 pt-3 pb-2">
							<div class="row">
								<div class="col d-flex align-items-center">
									<img id="<%- user.teammate.displayName %>-thumbnail" class="player-icon <% if (user.teammate.inGame === game.code) { %>player-logged-in<% } else { %>player-logged-out<% } %>" src="<%- user.teammate.profileImageUrl %>" width="100" alt="<%- user.teammate.displayName %>'s thumbnail">

									<h3 class="ms-3 mb-0"><%- user.teammate.displayName %></h3>
								</div>
							</div>
							<div class="row text-start mt-3">
								<p><%- user.teammate.bio %></p>
							</div>
						</div>
					</div>
				</section>
			</div>
			<div class="row">
				<section>
					<h3 class="text-start text-light mt-4">Team chat</h3>
					<div class="row">
						<div class="col bg-white border border-dark ingame-border m-3 mt-0 pt-3 pb-2 chat-message-container chat-log w-100 text-start">
							<ul class="chat-messages list-unstyled"></ul>
						</div>
					</div>
				</section>
			</div>
			<div class="row">
				<section>
					<form id="form">
						<div class="row mt-2 my-5">
							<div class="col-10">
								<input id="input" type="text" class="in-game form-control" placeholder="Type a message..." autocomplete="off" autofocus>
							</div>
							<div class="col-2">
								<button class="btn btn-secondary in-game w-100" type="submit">Send message <i class="fa-solid fa-paper-plane ps-2"></i></button>
							</div>
						</div>
					</form>
				</section>
			</div>
			<div class="row text-light bg-dark">
				<section>
					<div id="quoteCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="10000">
						<div class="carousel-inner"></div>
					</div>
				</section>
			</div>
		</div>
    </section>
	<script>
		function shuffleArray (array)  { 
			for (let i = array.length - 1; i > 0; i--) { 
				const j = Math.floor(Math.random() * (i + 1)); 
				[array[i], array[j]] = [array[j], array[i]]; 
			} 
			return array; 
		}; 
		// Rotating tips
		const tips = [
		"Pro tip: Always trust your teammate&hellip; unless it's about 90s boy bands.",
		"Trivia fact: Honey never spoils. Just like your competitive spirit.",
		"Loading&hellip; Just like your internet connection.",
		"Tip: Reading the question out loud increases your IQ by exactly 0.0003%.",
		"Did you know? Cows have best friends. But they won't help you with trivia.",
		"Fun fact: This took about a billion hours to make.",
		"Did you know? Penguins propose to their mates with a pebble.",
		"Pro tip: When in doubt, answer \"42\". It's worked before.",
		"Tip: Trivia games improve memory. Or was it juggling? I forget.",
		"Fact: Bananas are berries. Strawberries aren't. Don't question it.",
		"Fact: 100% of trivia champions blink. Coincidence? Definitely.",
		"Trivia: Napoleon was once attacked by a horde of bunnies. True story.",
		"Tip: Teamwork makes the dream answers work.",
		"Fun fact: The longest word in the English language is 189,819 letters long. But you won't need it here.",
		"Did you know? Octopuses have three hearts. But only one brain.",
		"Quote: \"It's not a wrong answer, it's an alternative perspective.\"",
		"Tip: If you're unsure, confidently say the wrong answer. It's tradition.",
		"Fact: The mitochondrion is the powerhouse of the cell. Always will be.",
		"Tip: Take a deep breath. The questions are more afraid of you than you are of them.",
		"Loading tip: This space intentionally filled with nonsense."
		];
		const shuffledTips = shuffleArray(tips);

		const carouselInner = document.querySelector('#quoteCarousel .carousel-inner');
		shuffledTips.forEach((tip, index) => {
			const carouselItem = document.createElement('div');
			carouselItem.className = 'carousel-item' + (index === 0 ? ' active' : '');
			carouselItem.innerHTML = `<h4 class="quote-bar">${tip}</h4>`;
			carouselInner.appendChild(carouselItem);
		});

		const form = document.getElementById('form');
		const input = document.getElementById('input');
		const messages = document.querySelector('.chat-messages');

		form.addEventListener('submit', (e) => {
			e.preventDefault();
			if (input.value) {
				socket.emit('chat message', input.value, <%- JSON.stringify(user) %>);
				input.value = '';
			}
		});

	</script>
	<script src="/socket.io/socket.io.js"></script>
	<%- include('../helperFunctions'); %>
	<script>
	// Make sure .live-players accurately reflects the number of players waiting for the game to start
	setLivePlayersSpan(<%- JSON.stringify(game) %>);

	function setLivePlayersSpan(game) {
		let totalLivePlayers = 0;

		game.teams.forEach(team => {
			team.players.forEach(player => {
				if (player.inGame === game.code) {
					totalLivePlayers++;
				}
			});
		});

		const livePlayerSpan = document.querySelector(".live-players");
		livePlayerSpan.innerHTML = totalLivePlayers;
	}

	const socket = io({ query: { teamId: '<%= user.teamId %>' , role: '<%= user.role %>' } });

	<% if (chatLog) { chatLog.forEach((message) => { %> addChatMessage(".chat-messages", "<%- message %>");	<% }); } %>

	socket.on('chat message', (msg) => {
		addChatMessage(".chat-messages", msg);
	});

	socket.on('player joined', (gameCode, user) => {
		if (gameCode === "<%- game.code %>") {
			const livePlayerCount = document.querySelector(".live-players");
			livePlayerCount.innerHTML = parseInt(livePlayerCount.innerHTML) + 1;

			// Check if recently joined player is your teammate
			if (user.twitchId === "<%- user.teammate.twitchId %>") {
				const playerIcon = document.getElementById(user.displayName + "-thumbnail");
				playerIcon.classList.remove("player-logged-out");
				playerIcon.classList.add("player-logged-in");
			}
		}
	});

	socket.on('player left', (gameCode, user) => {
		if (gameCode === "<%- game.code %>") {
			const livePlayerCount = document.querySelector(".live-players");
			livePlayerCount.innerHTML = parseInt(livePlayerCount.innerHTML) - 1;

			// Check if recently left player is your teammate
			if (user.twitchId === "<%- user.teammate.twitchId %>") {
				const playerIcon = document.getElementById(user.displayName + "-thumbnail");
				playerIcon.classList.remove("player-logged-in");
				playerIcon.classList.add("player-logged-out");
			}
		}
	});

	socket.on('start game', (gameCode) => {
		if (gameCode === "<%- game.code %>") {
			window.location.replace("/game/in-game");
		}
	});
	</script>
	<!-- <script src="js/ajaxFormHandler.js"></script> -->
<%- include('../footer'); %>