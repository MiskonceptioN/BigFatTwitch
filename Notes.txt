Socket.io
=========
Use "rooms" to team up players
Monitor rooms in admin panel
Keep message in chat until promise is resolved?
{user} is typing

Game features
=============
"Bank a question"?
Audience vote on funniest answer?
"finish the lyric" question?

Admin ideas
=============
UI for creating games & dishing out points
"Promote" a viewer to contestant role

UI ideas
========
Admin panel: show number of connected player
Show a timer for each question and lock the input/canvas upon timeout
Add round names?
Show trophy next to logged in users names? *THIS IS A GOOD IDEA*
Show player bios on hover?

Settings/preferences ideas
==========================
Use Twitch colour in chat? - https://dev.twitch.tv/docs/api/reference/#get-user-chat-color
Bio?
Add "show affiliate/partner status" in user preferences?

Tech debt
=========
Figure out sensible way of setting up session secret
Whack (de)serializeUser into their own functions: // passport.serializeUser(User.serializeUser()); // passport.deserializeUser(User.deserializeUser());
Set up isInGame with game ID & state in Mongo
Save passport-twitch changes so they can be fetched by NPM
Make nav work with Bootstrap 5
Create audit on users {audit: created: DATE, updated: { profileImage: DATE, displayName: DATE }, banned: [DATE, DATE], unbanned: [DATE, DATE]}
Show error messages on logins
Link userid/sessioninfo
Kill session upon ban
Move flashes into its own EJS template
Make flashes dismissable
Add unit tests!
Make sure try/catch is *everywhere*
Use a foreach on flashes to show multiple messages
Ensure member ID in Teams table references Users table with objectID (currently using Twitch ID instead of objectID)
Wrap fetchTwitchChatColour() in try/catch
Sanitise chat messages using innerText for chat message, and innerhtml for the username prefix
